
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> makeCacheMatrix <- function(x = matrix()) {
+ 
Error: unexpected end of input
> inverse <- NULL
> set<-function(y){
+ x<<-y
+ m<<-NULL
+ }
> get <- function() x
> setinverse <- function(i) inverse <- i
> getinverse <- function() inverse
> list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
$set
function(y){
x<<-y
m<<-NULL
}

$get
function() x

$setinverse
function(i) inverse <- i

$getinverse
function() inverse

> }
Error: unexpected '}' in "}"
> ## Write a short comment describing this function
> 
> cacheSolve <- function(x, ...) {
+         ## Return a matrix that is the inverse of 'x'
+         inverse <- x$getinverse()
+         if(!is.null(inverse)) {
+         message("getting cached inverse")
+         return(inverse)
+         }
+         data <- x$get()
+         inverse <- solve(data, ...)
+         x$setinverse(inverse)
+         inverse
+ }
> 
> # data <- matrix(c(1, 1, 4, 0, 3, 1, 4, 4, 0), nrow=3, ncol=3)
> ## Write a short comment describing this function
> 
> cacheSolve <- function(x, ...) {
+ ## Return a matrix that is the inverse of 'x'
+   inverse <- x$getinverse()
+  if(!is.null(inverse)) {
+ message("getting cached inverse")
+         return(inverse)
+ }
+  data <- x$get()
+         inverse <- solve(data, ...)
+         x$setinverse(inverse)
+         inverse
+ # data <- matrix(c(1, 1, 4, 0, 3, 1, 4, 4, 0), nrow=3, ncol=3)
